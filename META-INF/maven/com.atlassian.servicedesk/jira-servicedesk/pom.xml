<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.atlassian.servicedesk</groupId>
        <artifactId>servicedesk-plugin-parent</artifactId>
        <version>5.12.2-REL-0001</version>
    </parent>

    <artifactId>jira-servicedesk</artifactId>
    <packaging>${packaging.type}</packaging>

    <name>Jira Service Management Plugin</name>
    <description>Jira Service Management - How can we help you?</description>

    <properties>
        <antlr.version>3.5.2</antlr.version>
        <!-- needed for OSGi import that references the actual version -->
        <!-- Default package type for builds -->
        <packaging.type>atlassian-plugin</packaging.type>
        <generated-src>${project.build.directory}/generated-src</generated-src>
        <atl.lf.version>1.2</atl.lf.version>
        <project.template.version>1.5</project.template.version>
        <commons.exec.version>1.1</commons.exec.version>
        <jvmargs>
            <!-- placeholder for -jvmargs param from atlas-debug  -->
        </jvmargs>
        <generated.locale.dir>${project.build.directory}/generated-src/pseudo-loc</generated.locale.dir>
    </properties>

    <dependencies>
        <!-- APIs -->
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-servicedesk-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-servicedesk-internal-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>servicedesk-internal-base-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-core</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--The transformer-less plugin deps need to go at the top at the moment because issuenav has a packageing mistake in it -->
        <dependency>
            <groupId>com.atlassian.plugin</groupId>
            <artifactId>atlassian-spring-scanner-annotation</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.security</groupId>
            <artifactId>atlassian-secure-utils</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-emailreply-stripping</artifactId>
            <version>${atlassian.pocketknife.emailreply.stripping.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-step</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira.plugins.workflow.sharing</groupId>
            <artifactId>jira-workflow-sharing-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-issue-nav-components</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.healthcheck</groupId>
            <artifactId>atlassian-healthcheck</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>servicedesk-squalor</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>servicedesk-core-ui-plugin</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.activeobjects</groupId>
            <artifactId>activeobjects-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.soy</groupId>
            <artifactId>soy-template-renderer-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.botocss</groupId>
            <artifactId>botocss</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion></exclusions>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-webresource</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.lookandfeel</groupId>
            <artifactId>atlassian-look-and-feel</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- REST module dependencies -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins.rest</groupId>
            <artifactId>atlassian-rest-common</artifactId>
            <version>${atlassian.rest.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.sal</groupId>
            <artifactId>sal-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.applinks</groupId>
            <artifactId>applinks-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.mail</groupId>
            <artifactId>jakarta.mail-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upgrade</groupId>
            <artifactId>upgrade-task-framework-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- PocketKnife dependencies -->
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-enablement</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-ao-dao</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-upgradetask</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-customfields</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-rest</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-dynamic-modules</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.bundles</groupId>
            <artifactId>jsr305</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-querydsl</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-sql</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.mysema.commons</groupId>
            <artifactId>mysema-commons-lang</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-api-commons-jira</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- Ozymandias - standard try/catch safe running -->
        <dependency>
            <groupId>com.atlassian.ozymandias</groupId>
            <artifactId>atlassian-plugin-point-safety</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- public REST API plugin -->
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-servicedesk-rest-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- working hours plugin -->
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-workinghours-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- timed promise plugin -->
        <dependency>
            <groupId>com.atlassian.plugin.timedpromise</groupId>
            <artifactId>atlassian-timed-promise-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Automation plugin -->
        <dependency>
            <groupId>com.atlassian.servicedesk.plugins.automation</groupId>
            <artifactId>servicedesk-automation-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Email processor plugin -->
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-email-processor-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Notification plugin -->
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>servicedesk-notifications-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- JWT plugin -->
        <dependency>
            <groupId>com.atlassian.jwt</groupId>
            <artifactId>jwt-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Beehive -->
        <dependency>
            <groupId>com.atlassian.beehive</groupId>
            <artifactId>beehive-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Lingo plugin-->
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>servicedesk-lingo-api</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Unit test dependencies -->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-standalone</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-tests</artifactId>
            <version>${jira.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira.plugins</groupId>
            <artifactId>jira-importers-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.mail</groupId>
            <artifactId>atlassian-mail</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-lucene-dmz</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.annotations</groupId>
            <artifactId>atlassian-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.application</groupId>
            <artifactId>atlassian-application-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>webwork</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.profiling</groupId>
            <artifactId>atlassian-profiling</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.seraph</groupId>
            <artifactId>atlassian-seraph</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.atlassian.util.concurrent</groupId>
            <artifactId>atlassian-util-concurrent</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.atlassian.fugue</groupId>
            <artifactId>fugue</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>crowd-integration-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.tenancy</groupId>
            <artifactId>atlassian-tenancy-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-webfragment-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.applinks</groupId>
            <artifactId>applinks-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-api-commons</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>embedded-crowd-core</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.analytics</groupId>
            <artifactId>analytics-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>sd-testing-backdoors</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-servicedesk-automation-spi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.atlassian.fugue</groupId>
            <artifactId>fugue-hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.ofbiz</groupId>
            <artifactId>entityengine</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.event</groupId>
            <artifactId>atlassian-event</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.scheduler</groupId>
            <artifactId>atlassian-scheduler-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>crowd-api</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-webresource-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>embedded-crowd-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.oauth2</groupId>
            <artifactId>oauth2-client-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.framework</artifactId>
            <!-- TODO check if its really felix or just OSGi API -->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>propertyset</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.core</groupId>
            <artifactId>atlassian-core</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-servicedesk-automation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.security</groupId>
            <artifactId>atlassian-secure-random</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.json</groupId>
            <artifactId>atlassian-json-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.collectors</groupId>
            <artifactId>atlassian-collectors-util</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.core</groupId>
            <artifactId>atlassian-core-thumbnail</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.crowd</groupId>
            <artifactId>crowd-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>servicedesk-test-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Working Hours plugin for unit tests ... need to clean up -->
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-workinghours-plugin</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>servicedesk-internal-base-plugin</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- for the parsing ics file uploads -->
        <dependency>
            <groupId>net.sf.biweekly</groupId>
            <artifactId>biweekly</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- for the copy-email-notifications-resources <execution> -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>servicedesk-frontend-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira.plugins</groupId>
            <artifactId>jira-assets-plugin</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>jira-servicedesk-public-rest-api-plugin</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.activeobjects</groupId>
            <artifactId>activeobjects-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.servicedesk</groupId>
            <artifactId>servicedesk-lingo-integration-plugin</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <!-- don't copy project templates (as they have to be zipped up -->
                    <exclude>project-templates/**</exclude>
                    <!--
                                  Tell Maven not to copy soy files into the target directory. This will be handled
                                  by the "prepare-soy-resources" script.
                               -->
                    <exclude>**/*.soy</exclude>
                    <exclude>com/atlassian/servicedesk/bootstrap/version/</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>com/atlassian/servicedesk/bootstrap/version/</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!--
                          This config is the guy who builds most of the JIRA plugin magic from our day to day point of view

                          Be deliberate about what you change here and why you do it

                        -->
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>jira-maven-plugin</artifactId>
                    <configuration>
                        <processI18nUsage>false</processI18nUsage>
                        <skipTests>true</skipTests>
                        <skipUTs>true</skipUTs>
                        <enablePde>false</enablePde>
                        <skipRestDocGeneration>true</skipRestDocGeneration>
                        <allowGoogleTracking>false</allowGoogleTracking>
                        <skipManifestValidation>true</skipManifestValidation>
                        <log4j2Config>src/test/resources/log4j2-test.xml</log4j2Config>
                        <compressResources>false</compressResources>
                        <!--
                                    ***************************************************

                                    Keep this section at the very bottom of the pom file since we need to update it frequently and hence
                                    going to the bottom of the file will make us all better developers and be able to live in peace and
                                    git merge harmony

                                    ***************************************************
                                    -->
                        <instructions>
                            <!--
                                          When we go fully transformer-less this Atlassian-Plugin-Key entry needs to be added
                                          to cause it to actually happen
                                          -->
                            <Atlassian-Plugin-Key>com.atlassian.servicedesk</Atlassian-Plugin-Key>
                            <Bundle-SymbolicName>com.atlassian.servicedesk</Bundle-SymbolicName>
                            <!-- Specifies the location of standard plugin modules to scan -->
                            <Atlassian-Scan-Folders>META-INF/plugin-descriptors</Atlassian-Scan-Folders>
                            <Private-Package>
                            </Private-Package>
                            <Require-Bundle>
                            </Require-Bundle>
                            <Export-Package>
                                com.atlassian.servicedesk.api;version="${jira.servicedesk.public.api.version}",
                                com.atlassian.servicedesk.api.*;version="${jira.servicedesk.public.api.version}",
                                com.atlassian.servicedesk.spi;version="${jira.servicedesk.public.api.version}",
                                com.atlassian.servicedesk.spi.*;version="${jira.servicedesk.public.api.version}",

                                com.atlassian.servicedesk.internal.api;version="${project.version}",
                                com.atlassian.servicedesk.internal.api.*;version="${project.version}",
                                com.atlassian.servicedesk.internal.spi;version="${project.version}",
                                com.atlassian.servicedesk.internal.spi.*;version="${project.version}",

                                com.atlassian.servicedesk.bootstrap.upgrade;version="${project.version}",

                                com.atlassian.servicedesk.workinprogressapi;version="${project.version}",
                                com.atlassian.servicedesk.workinprogressapi.*;version="${project.version}",

                                com.atlassian.servicedesk.internal.visiblefortesting;version="${project.version}",
                                javax.annotation.meta.*;version="${jsr305.version}"
                            </Export-Package>
                            <!-- versioned first, in alphabetical order, followed by optionals in alphabetic order, followed by mandatories, in alphabetic order-->
                            <Import-Package><!-- Imports we need specific versions of -->
                                org.antlr.*;version="${antlr.version}",

                                com.querydsl.*;version="${querydsl.version}",
                                com.mysema.commons.lang;version="${querydsl.version}",

                                <!-- Local OBR install deps, required for these plugins to be installed with the obr only -->
                                com.atlassian.servicedesk.api.notifications.internal.bootstrap.upgrade.task,
                                com.atlassian.servicedesk.project.internal.obr.install;resolution:="optional",
                                com.atlassian.servicedesk.plugins.automation.webhook.internal.obr.install;resolution:="optional",
                                com.atlassian.servicedesk.plugins.approvals.internal.obr.install;resolution:="optional",
                                com.atlassian.servicedesk.plugins.base.internal.obr.install,

                                <!-- transitively dependencies for java mail (JSD-1287, JSD-932) -->
                                javax.crypto;resolution:="optional",
                                javax.crypto.interfaces;resolution:="optional",
                                javax.crypto.spec;resolution:="optional",
                                javax.security.sasl;resolution:="optional",
                                sun.misc;resolution:="optional",

                                <!-- Mandatory imports than won't be picked up by BND-->
                                <!-- without them we break or are flaky at best -->
                                com.atlassian.jira.entity,

                                <!-- needed for ModuleType -->
                                com.atlassian.plugin.osgi.bridge.external,
                                com.atlassian.plugin.web.baseconditions,

                                <!-- declare import for javax.annotation here so @PostConstruct can be used -->
                                javax.annotation,

                                !com.fasterxml.jackson.*,

                                com.atlassian.jira.service.services.file,
                                <!-- Exclusions with their origin -->

                                <!-- commons-fileupload-1.3.1.jar, jira-workflow-sharing-plugin-1.1.39.jar -->
                                !javax.portlet,

                                <!-- querydsl-core-4.0.7.jar, xstream-1.4.8.jar, atlassian-timed-promise-plugin-2.1.1.jar, commons-pool2-2.3.jar -->
                                !net.sf.cglib.proxy,

                                <!-- atlassian-timed-promise-plugin-2.1.1.jar -->
                                !org.jvnet.hudson.annotation_indexer,

                                <!-- no idea where this comes from -->
                                !org.antlr.stringtemplate.*,

                                <!-- At build time the BND plugin will expand this * into the actual packages your code needs access to by analyzing -->
                                <!-- all of your code and it's dependencies through byte code scanning -->
                                *
                            </Import-Package>
                            <Spring-Context>*</Spring-Context>
                        </instructions>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-email-notifications-resources</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/classes/email-notifications
                                </outputDirectory>
                                <overwrite>true</overwrite>
                                <resources>
                                    <resource>
                                        <directory>../../frontend-plugin/target/classes/email-notifications</directory>
                                        <includes>
                                            <include>**/*</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-soy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>../../../misc/scripts/sd-prepare-soy.py</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*DBIT.java</include>
                        <include>**/*Test.java</include>
                        <include>**/Test*.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>amps-dispatcher-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.atlassian.plugin</groupId>
                <artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
                <version>${atlassian.spring.scanner.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>atlassian-spring-scanner</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
                <configuration>
                    <!--
                              These dependencies of SD will be scanned for @Components etc..
                              and hence can be considered part of our code base as well as code
                              in plugin/src/main (which is implicitly scanned).
                              -->
                    <scannedDependencies>
                        <dependency>
                            <groupId>com.atlassian.servicedesk</groupId>
                            <artifactId>servicedesk-squalor</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>atlassian-pocketknife-core</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>jira-pocketknife-enablement</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>jira-pocketknife-ao-dao</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>jira-pocketknife-upgradetask</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>jira-pocketknife-customfields</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>jira-pocketknife-rest</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>atlassian-pocketknife-dynamic-modules</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.atlassian.pocketknife</groupId>
                            <artifactId>atlassian-pocketknife-querydsl</artifactId>
                        </dependency>
                    </scannedDependencies>
                    <!-- Turn this on to true to show the inner workings of the build time scanner -->
                    <verbose>false</verbose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-generated-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated-src}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- Build workflow templates -->
                    <execution>
                        <id>zip-workflow-template</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- The new templates don't have the hacky meta properties on them any more - but need to be there for dark feature reasons -->
                                <zip basedir="src/main/resources/project-templates/unassigned"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk IT Support Workflow (Unassigned allowed).jwb"/>
                                <zip basedir="src/main/resources/project-templates/default"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk IT Support Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-problem"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL Problem Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-change"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL Change Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/basic-purchase"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk Purchase Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-change-with-approval"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL Change with Approval Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/basic-request-with-approvals"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk Basic Service Request with Approval Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/basic-request"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk Basic Service Request Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-v2-change"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL V2 Change Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-v2-incident"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL V2 Incident Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-v2-problem"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL V2 Problem Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/itil-v2-task-subtask"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk ITIL V2 Task Subtask Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/service-request-fulfilment"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk Service Request Fulfilment Workflow.jwb"/>
                                <zip basedir="src/main/resources/project-templates/service-request-fulfilment-with-approvals"
                                     destfile="${project.build.outputDirectory}/project-templates/Service Desk Service Request Fulfilment With Approvals Workflow.jwb"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default-build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.util</groupId>
                        <artifactId>db-schema-translator-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>jira-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>third-party-licensing</id>
            <!-- This profile will always be activated on bamboo -->
            <activation>
                <property>
                    <name>env.bamboo_buildKey</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-bom.csv-to-classpath</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.atlassian.servicedesk</groupId>
                                            <artifactId>servicedesk-parent-pom</artifactId>
                                            <version>${project.version}</version>
                                            <classifier>bom</classifier>
                                            <type>csv</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                            <destFileName>bom.csv</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>jira-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
